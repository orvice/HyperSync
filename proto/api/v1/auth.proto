syntax = "proto3";
package api.v1;

import "google/protobuf/timestamp.proto";

option go_package = "go.orx.me/apps/hyper-sync/pkg/proto/api/v1";

// AuthService 定义了认证相关的 RPC 方法
service AuthService {
  // 用户注册
  rpc Register(RegisterRequest) returns (RegisterResponse);
  // 用户登录
  rpc Login(LoginRequest) returns (LoginResponse);
  // 更新用户资料
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse);
  // 使用 Google 账号登录
  rpc LoginWithGoogle(LoginWithGoogleRequest) returns (LoginWithGoogleResponse);
  // 获取当前用户信息 (需要认证)
  rpc GetMe(GetMeRequest) returns (GetMeResponse);
}

// 用户信息
message User {
  string id = 1; // 用户唯一 ID
  string username = 2; // 用户名
  string email = 3; // 邮箱
  string nickname = 4; // 昵称
  string avatar_url = 5; // 头像 URL
  google.protobuf.Timestamp created_at = 6; // 创建时间
  google.protobuf.Timestamp updated_at = 7; // 更新时间
}

// 令牌信息
message TokenInfo {
  string access_token = 1; // 访问令牌
  string refresh_token = 2; // 刷新令牌
  int64 expires_in = 3; // 访问令牌有效期 (秒)
}

// 注册请求
message RegisterRequest {
  string username = 1; // 用户名
  string email = 2; // 邮箱
  string password = 3; // 密码
}

// 注册响应
message RegisterResponse {
  User user = 1; // 注册成功的用户信息
}

// 登录请求
message LoginRequest {
  string login = 1; // 可以是用户名或邮箱
  string password = 2; // 密码
}

// 登录响应
message LoginResponse {
  TokenInfo token_info = 1; // 认证令牌信息
  User user = 2; // 用户信息
}

// 更新用户资料请求
message UpdateProfileRequest {
  // 用户 ID 通常从认证信息中获取，这里不需要显式传递
  optional string nickname = 1; // 要更新的昵称
  optional string avatar_url = 2; // 要更新的头像 URL
}

// 更新用户资料响应
message UpdateProfileResponse {
  User user = 1; // 更新后的用户信息
}

// Google 登录请求
message LoginWithGoogleRequest {
  string code = 1; // Google OAuth 2.0 返回的授权码 或 ID Token
}

// Google 登录响应
message LoginWithGoogleResponse {
  TokenInfo token_info = 1; // 认证令牌信息
  User user = 2; // 用户信息 (可能是新创建的)
}

// 获取当前用户信息请求 (空消息，因为用户信息从认证上下文获取)
message GetMeRequest {}

// 获取当前用户信息响应
message GetMeResponse {
  User user = 1; // 当前用户信息
}
